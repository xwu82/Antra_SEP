{
	"name": "dataflow_WWI",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesOrdersCSV",
						"type": "DatasetReference"
					},
					"name": "SalesOrders"
				},
				{
					"dataset": {
						"referenceName": "SalesCustomersCSV",
						"type": "DatasetReference"
					},
					"name": "SalesCustomers"
				},
				{
					"dataset": {
						"referenceName": "SalesOrderLinesCSV",
						"type": "DatasetReference"
					},
					"name": "SalesOrderLines"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as string,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as string,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as integer,",
				"          IsUndersupplyBackordered as integer,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrders",
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as string,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as string,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as string,",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as double,",
				"          IsStatementSent as integer,",
				"          IsOnCreditHold as integer,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as integer,",
				"          DeliveryLocation as string,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as integer,",
				"          LastEditedBy as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomers",
				"source(output(",
				"          OrderLineID as integer,",
				"          OrderID as integer,",
				"          StockItemID as integer,",
				"          Description as string,",
				"          PackageTypeID as integer,",
				"          Quantity as integer,",
				"          UnitPrice as double,",
				"          TaxRate as double,",
				"          PickedQuantity as integer,",
				"          PickingCompletedWhen as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderLines",
				"SalesOrders select(mapColumn(",
				"          OrderID,",
				"          CustomerID,",
				"          SalespersonPersonID,",
				"          PickedByPersonID,",
				"          ContactPersonID,",
				"          BackorderOrderID,",
				"          LastEditedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"SalesCustomers select(mapColumn(",
				"          CustomerID,",
				"          CustomerName,",
				"          BillToCustomerID,",
				"          CustomerCategoryID,",
				"          BuyingGroupID,",
				"          PrimaryContactPersonID,",
				"          AlternateContactPersonID,",
				"          DeliveryMethodID,",
				"          DeliveryCityID,",
				"          PostalCityID,",
				"          LastEditedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select1, select2 join(select1@CustomerID == select2@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          OrderID,",
				"          CustomerID = select1@CustomerID,",
				"          SalespersonPersonID,",
				"          PickedByPersonID,",
				"          ContactPersonID,",
				"          BackorderOrderID,",
				"          LastEditedBy = select1@LastEditedBy,",
				"          CustomerName,",
				"          BillToCustomerID,",
				"          CustomerCategoryID,",
				"          BuyingGroupID,",
				"          PrimaryContactPersonID,",
				"          AlternateContactPersonID,",
				"          DeliveryMethodID,",
				"          DeliveryCityID,",
				"          PostalCityID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3"
			]
		}
	}
}