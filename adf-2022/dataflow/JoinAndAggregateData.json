{
	"name": "JoinAndAggregateData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesOrdersCSV",
						"type": "DatasetReference"
					},
					"name": "SalesOrdersCSV"
				},
				{
					"dataset": {
						"referenceName": "SalesOrderLinesCSV",
						"type": "DatasetReference"
					},
					"name": "SalesOrderLinesCSV"
				},
				{
					"dataset": {
						"referenceName": "SalesCustomersCSV",
						"type": "DatasetReference"
					},
					"name": "SalesCustomerCSV"
				},
				{
					"dataset": {
						"referenceName": "SalesInvoicesCSV",
						"type": "DatasetReference"
					},
					"name": "SalesInvoicesCSV"
				},
				{
					"dataset": {
						"referenceName": "ApplicationPeopleCSV",
						"type": "DatasetReference"
					},
					"name": "ApplicationPeopleCSV"
				},
				{
					"dataset": {
						"referenceName": "WarehousePackageTypesCSV",
						"type": "DatasetReference"
					},
					"name": "WarehousePackageTypesCSV"
				},
				{
					"dataset": {
						"referenceName": "WarehouseStockItemsCSV",
						"type": "DatasetReference"
					},
					"name": "WarehouseStockItemsCSV"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "InnerJoin1"
				},
				{
					"name": "InnerJoin2"
				},
				{
					"name": "select"
				},
				{
					"name": "Innerjoin3"
				},
				{
					"name": "Innerjoin4"
				},
				{
					"name": "InnerJoin5"
				},
				{
					"name": "InnerJoin6"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          CustomerID as integer,",
				"          SalespersonPersonID as integer,",
				"          PickedByPersonID as string,",
				"          ContactPersonID as integer,",
				"          BackorderOrderID as string,",
				"          OrderDate as date,",
				"          ExpectedDeliveryDate as date,",
				"          CustomerPurchaseOrderNumber as integer,",
				"          IsUndersupplyBackordered as integer,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          PickingCompletedWhen as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrdersCSV",
				"source(output(",
				"          OrderLineID as integer,",
				"          OrderID as integer,",
				"          StockItemID as integer,",
				"          Description as string,",
				"          PackageTypeID as integer,",
				"          Quantity as integer,",
				"          UnitPrice as double,",
				"          TaxRate as double,",
				"          PickedQuantity as integer,",
				"          PickingCompletedWhen as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderLinesCSV",
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as string,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as string,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as string,",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as double,",
				"          IsStatementSent as integer,",
				"          IsOnCreditHold as integer,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as integer,",
				"          DeliveryLocation as string,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as integer,",
				"          LastEditedBy as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomerCSV",
				"source(output(",
				"          InvoiceID as integer,",
				"          CustomerID as integer,",
				"          BillToCustomerID as integer,",
				"          OrderID as integer,",
				"          DeliveryMethodID as integer,",
				"          ContactPersonID as integer,",
				"          AccountsPersonID as integer,",
				"          SalespersonPersonID as integer,",
				"          PackedByPersonID as integer,",
				"          InvoiceDate as date,",
				"          CustomerPurchaseOrderNumber as integer,",
				"          IsCreditNote as integer,",
				"          CreditNoteReason as string,",
				"          Comments as string,",
				"          DeliveryInstructions as string,",
				"          InternalComments as string,",
				"          TotalDryItems as integer,",
				"          TotalChillerItems as integer,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          ReturnedDeliveryData as string,",
				"          ConfirmedDeliveryTime as string,",
				"          ConfirmedReceivedBy as string,",
				"          LastEditedBy as integer,",
				"          LastEditedWhen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesInvoicesCSV",
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as string,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as integer,",
				"          HashedPassword as string,",
				"          IsSystemUser as string,",
				"          IsEmployee as integer,",
				"          IsSalesperson as integer,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as string,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ApplicationPeopleCSV",
				"source(output(",
				"          PackageTypeID as integer,",
				"          PackageTypeName as string,",
				"          LastEditedBy as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> WarehousePackageTypesCSV",
				"source(output(",
				"          StockItemID as integer,",
				"          StockItemName as string,",
				"          SupplierID as integer,",
				"          ColorID as string,",
				"          UnitPackageID as integer,",
				"          OuterPackageID as integer,",
				"          Brand as string,",
				"          Size as string,",
				"          LeadTimeDays as integer,",
				"          QuantityPerOuter as integer,",
				"          IsChillerStock as string,",
				"          Barcode as string,",
				"          TaxRate as double,",
				"          UnitPrice as double,",
				"          RecommendedRetailPrice as string,",
				"          TypicalWeightPerUnit as double,",
				"          MarketingComments as string,",
				"          InternalComments as string,",
				"          Photo as string,",
				"          CustomFields as string,",
				"          Tags as string,",
				"          SearchDetails as string,",
				"          LastEditedBy as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> WarehouseStockItemsCSV",
				"SalesOrdersCSV, SalesOrderLinesCSV join(SalesOrdersCSV@OrderID == SalesOrderLinesCSV@OrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin1",
				"SalesCustomerCSV, InnerJoin1 join(SalesCustomerCSV@CustomerID == SalesOrdersCSV@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin2",
				"InnerJoin1 select(mapColumn(",
				"          OrderID = SalesOrdersCSV@OrderID,",
				"          CustomerID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"SalesInvoicesCSV, InnerJoin2 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Innerjoin3",
				"ApplicationPeopleCSV, Innerjoin3 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Innerjoin4",
				"WarehousePackageTypesCSV, Innerjoin4 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin5",
				"WarehouseStockItemsCSV, InnerJoin5 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin6"
			]
		}
	}
}